(function() {

  var posts = IR.posts;

  function update_highlight() {
    // Strip non alpha numeric characters
    var object_id = location.hash.replace(/\W/g, '');
    var $o = $('#' + object_id);
    $('.highlighted').not($o).removeClass('highlighted');
    $o.addClass('highlighted');
  }

  setTimeout(function() {
    // If bootstrap stylesheet failed to load, use local fallback
    if ($('body').css('color') != 'rgb(51, 51, 51)') {
      var link_template = '<link rel="stylesheet" href="X">';
      $('head')
        .append(link_template.replace(
          'X', posts.assets_url + 'bootstrap/css/bootstrap.min.css'))
        .append(link_template.replace(
          'X', posts.base_url + 'site.min.css'));
    }
  }, 1000);

  // Emphasize DOM element specified by anchor
  update_highlight();

  // Update highlight if user changes anchor
  onhashchange = update_highlight;

  // Add tooltips
  $('[data-toggle="tooltip"]').tooltip();

}());

function disable_form($form) {
  $form.find('[name], button').prop('disabled', true);
  return $form;
}

function enable_form($form) {
  $form.find('[name], button').prop('disabled', false);
  return $form;
}

function record_event(category, action, label, value) {
  if (typeof ga !== 'undefined') {
    ga('send', 'event', category, action, label, value);
  } else {
    console.log(category, action, label, value);
  }
}

function show_feedback(title, body) {
  // Hide other modals
  $('.modal').modal('hide');
  // Render feedback modal
  var $modal = $('#feedback-modal');
  $modal.find('.modal-title').html(title);
  $modal.find('.modal-body').html(body);
  return $modal.modal('show');
}

function get_form_json($form) {
  return JSON.stringify(get_form_dictionary($form));
}

function get_form_dictionary($form) {
  var d = {}, xs = $form.serializeArray();
  for (var i = 0; i < xs.length; i++) {
    d[xs[i].name] = xs[i].value;
  }
  return d;
}

function get_group_value($form_group, field_name) {
  return $form_group.find('[name=' + field_name + ']:checked').val();
}

function set_group_value($form_group, field_name, field_value) {
  $form_group.find('[name=' + field_name + '][value=' + field_value + ']').click();
}

function show_errors($form, jqXHR) {
  var d = jqXHR.responseJSON, has_unexpected_errors = !d;

  for (var k in d) {
    var $label = $form.find('label[for=' + k + ']'),
      $span = $label.find('span'),
      $o = $form.find('[name=' + k + ']'),
      text = ' (' + d[k] + ')';

    if (!$o.length) {
      has_unexpected_errors = true;
    }

    if ($span.length) {
      $span.text(text);
    } else {
      $label.append('<span class="text-danger">' + text + '</span>');
    }

    $o.addClass('error').focus();
  }

  if (has_unexpected_errors) {
    show_feedback('Oops', jqXHR.responseText || 'We could not handle your request.');
  }

}

function wipe_errors($form) {
  $form.find('label span').remove();
  $form.find('[name]').removeClass('error');
}
