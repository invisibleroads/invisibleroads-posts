(function() {

  var posts = IR.posts;

  function update_emphasis() {
    var $o = $(location.hash);
    $('.emphasis').not($o).removeClass('emphasis');
    $o.addClass('emphasis');
  }

  setTimeout(function() {
    // If bootstrap stylesheet failed to load, use local fallback
    if ($('body').css('color') != 'rgb(51, 51, 51)') {
      var link_template = '<link rel="stylesheet" href="X">';
      $('head')
        .append(link_template.replace(
          'X', posts.assets_url + 'bootstrap/css/bootstrap.min.css'))
        .append(link_template.replace(
          'X', posts.base_url + 'site.min.css'));
    }
  }, 1000);

  // Emphasize DOM element specified by anchor
  update_emphasis();

  // Update emphasis if user changes anchor
  onhashchange = update_emphasis;

  // Add tooltips
  $('[data-toggle="tooltip"]').tooltip();

}());

function disable_form($form) {
  $form.find('[name], button').prop('disabled', true);
  return $form;
}

function enable_form($form) {
  $form.find('[name], button').prop('disabled', false);
  return $form;
}

function record_event(category, action, label, value) {
  if (typeof ga !== 'undefined') {
    ga('send', 'event', category, action, label, value);
  } else {
    console.log(category, action, label, value);
  }
}

function show_feedback(title, body) {
  // Hide other modals
  $('.modal').modal('hide');
  // Render feedback modal
  var $modal = $('#feedback-modal');
  $modal.find('.modal-title').html(title);
  $modal.find('.modal-body').html(body);
  return $modal.modal('show');
}

function get_group_value($form_group, field_name) {
  return $form_group.find('[name=' + field_name + ']:checked').val();
}

function set_group_value($form_group, field_name, field_value) {
  $form_group.find('[name=' + field_name + '][value=' + field_value + ']').click();
}
